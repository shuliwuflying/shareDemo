apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'me.ele.lancet'

apply from: 'http://tosv.byted.org/obj/ttclient-android/bits_publish.gradle'


//apply plugin: 'com.bytedance.rheaplugin'
//
//rheaTrace {
//    //其他配置参数，后面3.2小结详细介绍
//    useSystrace=true
//    traceAll=true
//}

def bakPath = file("${buildDir}/bakFile/")
def bakFiles = ["mapping.txt", "resources.txt", "seeds.txt", "usage.txt"]

//获取产品的名字
def getProductName() {
    return "shareDemo_" + rootProject.ext.app.versionName + "${getJenkinsBuild()}"
}

//获取当前系统的时间
def releaseTime() {
    return new Date().format("yyyyMMddHHmmss")
}

boolean isInJeknins() {
    Map<String, String> map = System.getenv()
    if (map == null) {
        return false
    }
//    printf('env=%s\n',map.toMapString())
    String str
    Iterator it = map.iterator();
    while (it.hasNext()) {
        str = it.next();
        if (str.contains("jenkins")) {
            return true
        }
    }
    return false;
}
//获取jenkins build number
def getJenkinsBuild() {
    boolean flag = isInJeknins();
    if (flag) {
        ext.env = System.getenv()
        ext.buildNumber = env.get("BUILD_NUMBER");
        return "#" + "$buildNumber"
    } else {
        return ""
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.slive.demo"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.app.versionCode
        versionName rootProject.ext.app.versionName

        externalNativeBuild {
            cmake {
                arguments "-DBITS_HEADER_DIR=" + bitsDepend.headerDir
                arguments "-DBITS_SO_DIR=" + bitsDepend.soDir
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
        }

    }

    signingConfigs {
        releaseSigning {
            storeFile file('beauty.keystore')
            storePassword 'beauty'
            keyAlias 'beautykey'
            keyPassword 'beauty'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.releaseSigning
        }

        debug {
            signingConfig signingConfigs.releaseSigning
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    packagingOptions {
//        exclude '**/libbytehook.so'
//    }
//
    android.applicationVariants.all { variant ->
//        def taskName = variant.name
//        tasks.all{
//            if("assemble${taskName}".equalsIgnoreCase(it.name)){
//                it.doLast{
//                    copy{
//                        def fileName = getProductName() + "_${releaseTime()}"
//                        if(variant.productFlavors != null && variant.productFlavors[0] != null){
//                            fileName += "_"+variant.productFlavors[0].name
//                        }
//
//                        if(variant.buildType != null){
//                            fileName += "_"+variant.buildType.name
//                        }
//                        def destPath = bakPath;
//                        def apkName = fileName+".apk"
//                        def sourceApk = variant.outputs.outputFile
//                        def sourceApkName = sourceApk[0].getName()
//                        from sourceApk
//                        into destPath
//
//                        //备份 apk
//                        include(sourceApkName)
//                        rename(sourceApkName,apkName)
//
//                        //备份混淆文件
//                        from "${buildDir}/outputs/mapping/${variant.dirName}/"
//                        into destPath
//                        for(bakFileName in bakFiles){
//                            include(bakFileName)
//                            rename(bakFileName,fileName+"_"+bakFileName)
//                        }
//                    }
//                }
//            }
//        }
    }
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcommonui')
    implementation 'com.google.code.gson:gson:2.6.2'
    compile rootProject.ext.dependencies.okhttp
    compile rootProject.ext.dependencies.okio
    implementation 'com.github.JakeWharton:ViewPagerIndicator:2.4.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation project(":perf_monitor")

    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'
    compileOnly "com.bytedance.android:lancet-base:1.1.8"
    implementation 'com.creation:ultrasonic:1.8.9'
    implementation 'com.airbnb.android:lottie:3.1.0'

    implementation "com.bytedance.android:bytehook:0.0.1-alpha.18"
    bitsDependSo "com.bytedance.android:bytehook:0.0.1-alpha.18"
    implementation project(':hacker')
    implementation 'com.alibaba:arouter-api:1.5.1'
    kapt 'com.alibaba:arouter-compiler:1.5.1'
    implementation project(':libcamera')
    implementation 'com.bytedance.hubble:library:1.0.3'
}

configurations.all {
    resolutionStrategy {
        force 'com.bytedance.ies.social.base:appdownloader:1.1.4.44.15'
        force 'com.bytedance.ies.social.base:downloader:1.1.4.44.13'
        force 'androidx.lifecycle:lifecycle-livedata-core:2.0.0-rc01'
        force 'androidx.lifecycle:lifecycle-runtime:2.1.0'
        force 'androidx.appcompat:appcompat:1.1.0'
        force 'androidx.slidingpanelayout:slidingpanelayout:1.0.0-rc01'
        force 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0-rc01'
        force 'androidx.lifecycle:lifecycle-viewmodel:2.3.0-alpha02'
    }
}
